syntax = "proto3";
package sgenetwork.sge.house;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "sge/house/params.proto";
import "sge/house/deposit.proto";
import "sge/house/withdraw.proto";

option go_package = "github.com/sge-network/sge/x/house/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sge/house/params";
  }

  // Deposits queries all deposits.
  rpc Deposits(QueryDepositsRequest) returns (QueryDepositsResponse) {
    option (google.api.http).get = "/sge/house/deposits";
  }

  // DepositsByAcc queries deposits info for given account address.
  rpc DepositsByAcc(QueryDepositsByAccRequest)
      returns (QueryDepositsByAccResponse) {
    option (google.api.http).get = "/sge/house/deposits/{address}";
  }

  // WithdrawalsByAcc queries withdrawals info for given account address.
  rpc WithdrawalsByAcc(QueryWithdrawalsByAccRequest)
      returns (QueryWithdrawalsByAccResponse) {
    option (google.api.http).get = "/sge/house/withdrawals/{address}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
// Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
// Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryDepositsRequest is request type for Query/Deposits RPC method.
message QueryDepositsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryDepositsResponse is response type for the Query/Deposits RPC method
message QueryDepositsResponse {
  // deposits is the list of deposits returned for the request.
  repeated Deposit deposits = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDepositsByAccRequest is request type for Query/DepositsByAcc RPC
// method.
message QueryDepositsByAccRequest {
  // address defines the address of depositor/account for which deposits are queried.
  string address = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDepositsByAccResponse is response type for the
// Query/DepositsByAcc RPC method
message QueryDepositsByAccResponse {
  // deposits contains all the queried deposits.
  repeated Deposit deposits = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDepositorWithdrawalsRequest is request type for
// Query/WithdrawalsByAcc RPC method.
message QueryWithdrawalsByAccRequest {
  // address defines the address of depositor/acc for which withdrawals are queried.
  string address = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryWithdrawalsByAccResponse is response type for the
// Query/WithdrawalsByAcc RPC method
message QueryWithdrawalsByAccResponse {
  // withdrawals contains all the queried withdrawals.
  repeated Withdrawal withdrawals = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
