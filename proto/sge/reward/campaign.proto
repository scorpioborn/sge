syntax = "proto3";
package sgenetwork.sge.reward;

import "gogoproto/gogo.proto";
import "sge/reward/reward.proto";

option go_package = "github.com/sge-network/sge/x/reward/types";

// Campaign is type for defining the campaign properties.
message Campaign {
  // creator is the address of campaign creator.
  string creator = 1;
  string uid = 2 [
    (gogoproto.customname) = "UID",
    (gogoproto.jsontag) = "uid",
    json_name = "uid"
  ];
  string house_uid = 3 [
    (gogoproto.customname) = "HouseUID",
    (gogoproto.jsontag) = "house_uid",
    json_name = "house_uid"
  ];
  string funder_address = 4;
  // start_ts is the start timestamp of a campaign.
  uint64 start_ts = 5 [
    (gogoproto.customname) = "StartTS",
    (gogoproto.jsontag) = "start_ts",
    json_name = "start_ts"
  ];
  // end_ts is the end timestamp of a campaign.
  uint64 end_ts = 6 [
    (gogoproto.customname) = "EndTS",
    (gogoproto.jsontag) = "end_ts",
    json_name = "end_ts"
  ];
  // reward_type is the type of defined reward.
  RewardType reward_type = 7;
  // reward_def is the definition of the campaign rewards.
  Definition reward_def = 8 [ (gogoproto.nullable) = false ];
  // pool is the tracker of pool funds of the campaign.
  Pool pool = 9 [ (gogoproto.nullable) = false ];
}

// Pool is the type for the campaign funding pool.
message Pool {
  string total = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"total\""
  ];
  string spent = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"spent\""
  ];
}