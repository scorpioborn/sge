// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sge/legacy/reward/v1beta/authz.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// CreateCampaignAuthorization allows the grantee to spend up to spend_limit
// from the granter's account for create campaign.
type CreateCampaignAuthorization struct {
	SpendLimit cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=spend_limit,json=spendLimit,proto3,customtype=cosmossdk.io/math.Int" json:"spend_limit"`
}

func (m *CreateCampaignAuthorization) Reset()         { *m = CreateCampaignAuthorization{} }
func (m *CreateCampaignAuthorization) String() string { return proto.CompactTextString(m) }
func (*CreateCampaignAuthorization) ProtoMessage()    {}
func (*CreateCampaignAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_be9179e357aa6ded, []int{0}
}
func (m *CreateCampaignAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateCampaignAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateCampaignAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateCampaignAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCampaignAuthorization.Merge(m, src)
}
func (m *CreateCampaignAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *CreateCampaignAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCampaignAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCampaignAuthorization proto.InternalMessageInfo

// UpdateCampaignAuthorization allows the grantee to spend up to spend_limit
// from the granter's account for update campaign.
type UpdateCampaignAuthorization struct {
	SpendLimit cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=spend_limit,json=spendLimit,proto3,customtype=cosmossdk.io/math.Int" json:"spend_limit"`
}

func (m *UpdateCampaignAuthorization) Reset()         { *m = UpdateCampaignAuthorization{} }
func (m *UpdateCampaignAuthorization) String() string { return proto.CompactTextString(m) }
func (*UpdateCampaignAuthorization) ProtoMessage()    {}
func (*UpdateCampaignAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_be9179e357aa6ded, []int{1}
}
func (m *UpdateCampaignAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCampaignAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCampaignAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateCampaignAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCampaignAuthorization.Merge(m, src)
}
func (m *UpdateCampaignAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCampaignAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCampaignAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCampaignAuthorization proto.InternalMessageInfo

// WithdrawCampaignAuthorization allows the grantee to withdraw remaining
// pool balance of the campaign from the granter's account.
type WithdrawCampaignAuthorization struct {
	// withdraw_limit is the maximum limit of the withdrawal by authorization.
	WithdrawLimit cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=withdraw_limit,json=withdrawLimit,proto3,customtype=cosmossdk.io/math.Int" json:"withdraw_limit"`
}

func (m *WithdrawCampaignAuthorization) Reset()         { *m = WithdrawCampaignAuthorization{} }
func (m *WithdrawCampaignAuthorization) String() string { return proto.CompactTextString(m) }
func (*WithdrawCampaignAuthorization) ProtoMessage()    {}
func (*WithdrawCampaignAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_be9179e357aa6ded, []int{2}
}
func (m *WithdrawCampaignAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WithdrawCampaignAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WithdrawCampaignAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WithdrawCampaignAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawCampaignAuthorization.Merge(m, src)
}
func (m *WithdrawCampaignAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *WithdrawCampaignAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawCampaignAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawCampaignAuthorization proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateCampaignAuthorization)(nil), "sge.legacy.reward.CreateCampaignAuthorization")
	proto.RegisterType((*UpdateCampaignAuthorization)(nil), "sge.legacy.reward.UpdateCampaignAuthorization")
	proto.RegisterType((*WithdrawCampaignAuthorization)(nil), "sge.legacy.reward.WithdrawCampaignAuthorization")
}

func init() {
	proto.RegisterFile("sge/legacy/reward/v1beta/authz.proto", fileDescriptor_be9179e357aa6ded)
}

var fileDescriptor_be9179e357aa6ded = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x91, 0x31, 0x4b, 0xc3, 0x40,
	0x18, 0x86, 0x93, 0x45, 0xf0, 0x44, 0xc1, 0xa2, 0x20, 0x4a, 0xaf, 0x22, 0x0e, 0x2e, 0xde, 0x29,
	0xee, 0x82, 0xad, 0x8b, 0xe2, 0x24, 0x88, 0x20, 0x88, 0x5c, 0x92, 0x8f, 0xcb, 0xd1, 0x26, 0xdf,
	0x71, 0xf7, 0xc5, 0xd8, 0xfe, 0x0a, 0x7f, 0x56, 0xc7, 0x8e, 0xe2, 0x50, 0x24, 0xf9, 0x23, 0x92,
	0x44, 0x17, 0x71, 0x71, 0x70, 0x7b, 0xe1, 0x9e, 0xf7, 0x7d, 0xe0, 0x3e, 0x76, 0xe8, 0x35, 0xc8,
	0x09, 0x68, 0x15, 0x4f, 0xa5, 0x83, 0x52, 0xb9, 0x44, 0x3e, 0x9f, 0x46, 0x40, 0x4a, 0xaa, 0x82,
	0xd2, 0x99, 0xb0, 0x0e, 0x09, 0x7b, 0x9b, 0x5e, 0x83, 0xe8, 0x28, 0xd1, 0x51, 0xbb, 0x5b, 0x1a,
	0x35, 0xb6, 0xaf, 0xb2, 0x49, 0x1d, 0x78, 0xf0, 0xc8, 0xf6, 0x46, 0x0e, 0x14, 0xc1, 0x48, 0x65,
	0x56, 0x19, 0x9d, 0x5f, 0x14, 0x94, 0xa2, 0x33, 0x33, 0x45, 0x06, 0xf3, 0xde, 0x39, 0x5b, 0xf3,
	0x16, 0xf2, 0xe4, 0x69, 0x62, 0x32, 0x43, 0x3b, 0xe1, 0x7e, 0x78, 0xb4, 0x3a, 0xec, 0xcf, 0x97,
	0x83, 0xe0, 0x7d, 0x39, 0xd8, 0x8e, 0xd1, 0x67, 0xe8, 0x7d, 0x32, 0x16, 0x06, 0x65, 0xa6, 0x28,
	0x15, 0x57, 0x39, 0xdd, 0xb2, 0xb6, 0x71, 0xd3, 0x14, 0x9a, 0xf9, 0x3b, 0x9b, 0xfc, 0xdb, 0x3c,
	0xb0, 0xfe, 0xbd, 0xa1, 0x34, 0x71, 0xaa, 0xfc, 0x5d, 0x70, 0xc9, 0x36, 0xca, 0x2f, 0xe0, 0x2f,
	0x8e, 0xf5, 0xef, 0x52, 0xab, 0x19, 0x5e, 0xcf, 0x2b, 0x1e, 0x2e, 0x2a, 0x1e, 0x7e, 0x54, 0x3c,
	0x7c, 0xad, 0x79, 0xb0, 0xa8, 0x79, 0xf0, 0x56, 0xf3, 0xe0, 0xe1, 0x44, 0x1b, 0x4a, 0x8b, 0x48,
	0xc4, 0x98, 0x49, 0xaf, 0xe1, 0x38, 0x07, 0x2a, 0xd1, 0x8d, 0x9b, 0x2c, 0x5f, 0x7e, 0x9c, 0x89,
	0xa6, 0x16, 0x7c, 0xb4, 0xd2, 0xfe, 0xfb, 0xd9, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x47, 0x95,
	0xd8, 0x09, 0xc8, 0x01, 0x00, 0x00,
}

func (m *CreateCampaignAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateCampaignAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateCampaignAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.SpendLimit.Size()
		i -= size
		if _, err := m.SpendLimit.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintAuthz(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *UpdateCampaignAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCampaignAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateCampaignAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.SpendLimit.Size()
		i -= size
		if _, err := m.SpendLimit.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintAuthz(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *WithdrawCampaignAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WithdrawCampaignAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WithdrawCampaignAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.WithdrawLimit.Size()
		i -= size
		if _, err := m.WithdrawLimit.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintAuthz(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintAuthz(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuthz(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateCampaignAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SpendLimit.Size()
	n += 1 + l + sovAuthz(uint64(l))
	return n
}

func (m *UpdateCampaignAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SpendLimit.Size()
	n += 1 + l + sovAuthz(uint64(l))
	return n
}

func (m *WithdrawCampaignAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.WithdrawLimit.Size()
	n += 1 + l + sovAuthz(uint64(l))
	return n
}

func sovAuthz(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuthz(x uint64) (n int) {
	return sovAuthz(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateCampaignAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthz
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateCampaignAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateCampaignAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpendLimit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthz
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthz
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthz
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SpendLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthz(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthz
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCampaignAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthz
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCampaignAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCampaignAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpendLimit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthz
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthz
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthz
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SpendLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthz(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthz
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WithdrawCampaignAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthz
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WithdrawCampaignAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WithdrawCampaignAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawLimit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthz
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthz
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthz
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.WithdrawLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthz(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthz
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuthz(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuthz
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthz
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthz
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuthz
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuthz
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuthz
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuthz        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuthz          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuthz = fmt.Errorf("proto: unexpected end of group")
)
