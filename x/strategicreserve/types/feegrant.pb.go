// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sge/strategicreserve/feegrant.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// FeeGrant represents the fee grant object of the strategic reserve module
// account.
type FeeGrant struct {
	// creator is the account address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// grantee is the account address of the grantee.
	Grantee string `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	// grant_block_time is the block time of the grant.
	GrantBlockTime int64 `protobuf:"varint,3,opt,name=grant_block_time,json=grantBlockTime,proto3" json:"grant_block_time,omitempty"`
}

func (m *FeeGrant) Reset()         { *m = FeeGrant{} }
func (m *FeeGrant) String() string { return proto.CompactTextString(m) }
func (*FeeGrant) ProtoMessage()    {}
func (*FeeGrant) Descriptor() ([]byte, []int) {
	return fileDescriptor_204a36ffe2127226, []int{0}
}
func (m *FeeGrant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeeGrant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeeGrant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeeGrant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeGrant.Merge(m, src)
}
func (m *FeeGrant) XXX_Size() int {
	return m.Size()
}
func (m *FeeGrant) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeGrant.DiscardUnknown(m)
}

var xxx_messageInfo_FeeGrant proto.InternalMessageInfo

func (m *FeeGrant) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *FeeGrant) GetGrantee() string {
	if m != nil {
		return m.Grantee
	}
	return ""
}

func (m *FeeGrant) GetGrantBlockTime() int64 {
	if m != nil {
		return m.GrantBlockTime
	}
	return 0
}

func init() {
	proto.RegisterType((*FeeGrant)(nil), "sgenetwork.sge.strategicreserve.FeeGrant")
}

func init() {
	proto.RegisterFile("sge/strategicreserve/feegrant.proto", fileDescriptor_204a36ffe2127226)
}

var fileDescriptor_204a36ffe2127226 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x4f, 0x3b, 0x4e, 0xc3, 0x40,
	0x10, 0xf5, 0x12, 0x89, 0x8f, 0x0b, 0x84, 0x2c, 0x0a, 0x8b, 0x62, 0x89, 0xa0, 0x71, 0x83, 0xb7,
	0xc8, 0x0d, 0x52, 0x40, 0x45, 0x13, 0x51, 0xd1, 0x44, 0xb6, 0xf5, 0x98, 0x58, 0xc1, 0x99, 0x68,
	0x76, 0xf8, 0xdd, 0x82, 0x63, 0x51, 0xa6, 0xa4, 0x44, 0xf6, 0x45, 0xd0, 0x6e, 0x42, 0x43, 0xba,
	0xf7, 0x9b, 0xcf, 0x4b, 0xaf, 0x3d, 0xc1, 0x79, 0x95, 0x4a, 0x41, 0x6d, 0x23, 0xf0, 0x90, 0x57,
	0xb8, 0x27, 0x80, 0xa4, 0x5a, 0x69, 0xb9, 0x16, 0x56, 0xce, 0x2e, 0x3d, 0x61, 0x05, 0x7d, 0x63,
	0x59, 0x96, 0x9e, 0x50, 0xfe, 0xcf, 0x5f, 0x9c, 0x13, 0x13, 0xc7, 0xac, 0x0b, 0x68, 0x3b, 0x76,
	0xb5, 0x48, 0x8f, 0x6f, 0x81, 0xbb, 0xb0, 0x28, 0xcb, 0xd3, 0xa3, 0x46, 0x50, 0x29, 0x4b, 0x6e,
	0xc6, 0xa6, 0x38, 0x99, 0xfd, 0xd1, 0xe0, 0xc4, 0x5b, 0x40, 0x7e, 0xb0, 0x75, 0x76, 0x34, 0x2b,
	0xd2, 0xb3, 0x08, 0xe7, 0xf5, 0x33, 0x37, 0xcb, 0xb9, 0xb6, 0x1d, 0xf2, 0xd1, 0xd8, 0x14, 0xa3,
	0xd9, 0x69, 0xd4, 0xa7, 0x41, 0x7e, 0x68, 0x3b, 0x4c, 0xef, 0xbf, 0x7a, 0x6b, 0x36, 0xbd, 0x35,
	0x3f, 0xbd, 0x35, 0x9f, 0x83, 0x4d, 0x36, 0x83, 0x4d, 0xbe, 0x07, 0x9b, 0x3c, 0x4e, 0xa8, 0xd5,
	0xc5, 0x4b, 0x5d, 0x36, 0xdc, 0x39, 0x4f, 0xb8, 0xd9, 0xd5, 0x08, 0xd8, 0xbd, 0xef, 0x17, 0xd7,
	0x8f, 0x35, 0x7c, 0x7d, 0x18, 0xff, 0x9f, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x22, 0x03,
	0x63, 0x1d, 0x01, 0x00, 0x00,
}

func (m *FeeGrant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeeGrant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeeGrant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GrantBlockTime != 0 {
		i = encodeVarintFeegrant(dAtA, i, uint64(m.GrantBlockTime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Grantee) > 0 {
		i -= len(m.Grantee)
		copy(dAtA[i:], m.Grantee)
		i = encodeVarintFeegrant(dAtA, i, uint64(len(m.Grantee)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintFeegrant(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintFeegrant(dAtA []byte, offset int, v uint64) int {
	offset -= sovFeegrant(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FeeGrant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovFeegrant(uint64(l))
	}
	l = len(m.Grantee)
	if l > 0 {
		n += 1 + l + sovFeegrant(uint64(l))
	}
	if m.GrantBlockTime != 0 {
		n += 1 + sovFeegrant(uint64(m.GrantBlockTime))
	}
	return n
}

func sovFeegrant(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFeegrant(x uint64) (n int) {
	return sovFeegrant(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FeeGrant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFeegrant
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeeGrant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeeGrant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFeegrant
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFeegrant
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grantee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFeegrant
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFeegrant
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Grantee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantBlockTime", wireType)
			}
			m.GrantBlockTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GrantBlockTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFeegrant(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFeegrant
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFeegrant(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFeegrant
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFeegrant
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFeegrant
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFeegrant
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFeegrant        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFeegrant          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFeegrant = fmt.Errorf("proto: unexpected end of group")
)
